Python 3 POCL:
  script:
  - export PY_EXE=python3
  - export PYOPENCL_TEST=portable:pthread
  # cython is here because pytential (for now, for TS) depends on it
  - export EXTRA_INSTALL="pybind11 cython numpy mako mpi4py"
  - curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/master/build-and-test-py-project.sh
  - ". ./build-and-test-py-project.sh"
  tags:
  - python3
  - pocl
  - mpi
  except:
  - tags
  artifacts:
    reports:
      junit: test/pytest.xml

Python 3 Nvidia Titan V:
  script:
  - export PY_EXE=python3
  - export PYOPENCL_TEST=nvi:titan
  - export EXTRA_INSTALL="pybind11 cython numpy mako"
  # cython is here because pytential (for now, for TS) depends on it
  - curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/master/build-and-test-py-project.sh
  - ". ./build-and-test-py-project.sh"
  tags:
  - python3
  - nvidia-titan-v
  except:
  - tags
  artifacts:
    reports:
      junit: test/pytest.xml

Python 3 POCL Examples:
  script:
  - test -n "$SKIP_EXAMPLES" && exit
  - export PY_EXE=python3
  - export PYOPENCL_TEST=portable:pthread
  # cython is here because pytential (for now, for TS) depends on it
  - export EXTRA_INSTALL="pybind11 cython numpy mako matplotlib"
  - curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/master/build-py-project-and-run-examples.sh
  - ". ./build-py-project-and-run-examples.sh"
  tags:
  - python3
  - pocl
  - large-node
  except:
  - tags

Python 3 POCL Firedrake:
  tags:
  - "docker-runner"
  image: "firedrakeproject/firedrake"
  script:
  - sudo apt update
  - sudo apt install -y pocl-opencl-icd ocl-icd-opencl-dev
  - source ~/firedrake/bin/activate
  - "grep -v loopy requirements.txt > myreq.txt"
  - pip install -r myreq.txt
  - pip install --force-reinstall git+https://github.com/benSepanski/loopy.git@firedrake-usable_for_potentials
  # The Firedrake container is based on Py3.6 as of 2020-10-10, which
  # doesn't have dataclasses.
  - pip install pytest dataclasses
  - pip install .
  - cd test
  - python -m pytest --tb=native --junitxml=pytest.xml -rxsw test_firedrake_interop.py
  - cd ../examples
  - for i in $(find . -name '*firedrake*.py' -exec grep -q __main__ '{}' \; -print ); do \
        echo "-----------------------------------------------------------------------" \
        echo "RUNNING $i" \
        echo "-----------------------------------------------------------------------" \
        dn=$(dirname "$i") \
        bn=$(basename "$i") \
        (cd $dn; time ${PY_EXE} "$bn") \
    done
  artifacts:
    reports:
      junit: test/pytest.xml

Python 3 Conda:
  script: |
    CONDA_ENVIRONMENT=.test-conda-env-py3.yml
    curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/master/build-and-test-py-project-within-miniconda.sh
    . ./build-and-test-py-project-within-miniconda.sh
  tags:
  # - docker-runner
  - linux
  - large-node
  except:
  - tags

Documentation:
  script:
  - EXTRA_INSTALL="pybind11 cython numpy"
  - curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/master/build-docs.sh
  - ". ./build-docs.sh"
  tags:
  - python3
  only:
  - master

Flake8:
  script:
  - curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/master/prepare-and-run-flake8.sh
  - . ./prepare-and-run-flake8.sh "$CI_PROJECT_NAME" test
  tags:
  - python3
  except:
  - tags
